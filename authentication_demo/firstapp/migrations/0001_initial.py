# Generated by Django 4.1.12 on 2024-02-25 09:06

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AssetsInfo',
            fields=[
                ('asset_id', models.AutoField(primary_key=True, serialize=False)),
                ('asset_name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('hostel', 'Hostel'), ('pg', 'PG')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_owner', models.CharField(blank=True, max_length=15, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PG',
            fields=[
                ('pg_id', models.AutoField(primary_key=True, serialize=False)),
                ('location', models.JSONField()),
                ('rent', models.IntegerField()),
                ('description', models.TextField()),
                ('images', models.JSONField(default=list)),
                ('is_wifi', models.BooleanField(default=False)),
                ('is_laundry', models.BooleanField(default=False)),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='firstapp.assetsinfo')),
            ],
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('owner_id', models.AutoField(primary_key=True, serialize=False)),
                ('phone', models.CharField(max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owners', to='firstapp.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='Hostel',
            fields=[
                ('hostel_id', models.AutoField(primary_key=True, serialize=False)),
                ('location', models.JSONField()),
                ('fee', models.IntegerField()),
                ('description', models.TextField()),
                ('images', models.JSONField(default=list)),
                ('is_wifi', models.BooleanField(default=False)),
                ('is_laundry', models.BooleanField(default=False)),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='firstapp.assetsinfo')),
            ],
        ),
        migrations.AddField(
            model_name='assetsinfo',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstapp.owner'),
        ),
    ]
